size = 100 + 1
a = 10 + 3
volume = a / size

VAR ->
DIGIT ->
OP ->
ASSIGN_OP ->

Задача парсера:
) Проверить, что все корректно написано
) Преобразовать код в виде лексем промежуточное представление, которое можно выполнить на стэк машине
(Передать интерпретатору)


lang -> expr+
expr -> VAR ASSIGN_OP expr_value
expr_value -> VAR|DIGIT (OP VAR|DIGIT)*
///   value -> VAR|DIGIT
///   expr_value -> value(OP value)*


class Parser
передаем объекту класса Parser список токенов // сделать через LinkedList мб

*e_1* Обработка примерно такая - *что-то* найдено, хотя ожидалось *нечто другое*

void lang() {
	while(true) {
		expr
	}
}
void expr() {
	VAR() (void)
	ASSIGN_OP() (void)
	expr_value() (void)
}
в каждом методе^ делаем match . проверяем, совпадает ли (if current_token equals List[i] ...)
+ кидать exception *e_1* в случае ошибки
если ок, то выходим наверх и продолжаем следующий метод
